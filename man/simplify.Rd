% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simplify.R
\name{simplify}
\alias{simplify}
\title{Topologically-aware geometry simplification.}
\usage{
simplify(
  input,
  keep = 0.05,
  method = NULL,
  weighting = 0.7,
  keep_shapes = FALSE,
  no_repair = FALSE,
  snap = TRUE,
  explode = FALSE,
  force_FC = TRUE,
  drop_null_geometries = TRUE,
  snap_interval = NULL,
  sys = rmapshaper::check_sys_mapshaper(verbose = FALSE)
)
}
\arguments{
\item{input}{spatial object to simplify. One of:
\itemize{
\item \code{geo_json} or \code{character} polygons or lines;
\item \code{geo_list} polygons or lines;
\item \code{SpatialPolygons*} or \code{SpatialLines*};
\item \code{sf} or \code{sfc} polygons or lines object
}}

\item{keep}{proportion of points to retain (0-1; default 0.05)}

\item{method}{simplification method to use: \code{"vis"} for Visvalingam
algorithm, or \code{"dp"} for Douglas-Peuker algorithm. If left as
\code{NULL} (default), uses Visvalingam simplification but modifies the
area metric by underweighting the effective area of points at the vertex of
more acute angles, resulting in a smoother appearance. See this
\url{https://github.com/mbloch/mapshaper/wiki/Simplification-Tips}{link}
for more information.}

\item{weighting}{Coefficient for weighting Visvalingam simplification
(default is 0.7). Higher values produce smoother output. weighting=0 is
equivalent to unweighted Visvalingam simplification.}

\item{keep_shapes}{Prevent small polygon features from disappearing at high
simplification (default \code{FALSE})}

\item{no_repair}{disable intersection repair after simplification (default
\code{FALSE}).}

\item{snap}{Snap together vertices within a small distance threshold to fix
small coordinate misalignment in adjacent polygons. Default \code{TRUE}.}

\item{explode}{Should multipart polygons be converted to singlepart polygons?
This prevents small shapes from disappearing during simplification if
\code{keep_shapes = TRUE}. Default \code{FALSE}}

\item{force_FC}{should the output be forced to be a \code{FeatureCollection}
even if there are no attributes? Default \code{TRUE}.
\code{FeatureCollections} are more compatible with \code{rgdal::readOGR}
and \code{geojsonio::geojson_sp}. If \code{FALSE} and there are no
attributes associated with the geometries, a \code{GeometryCollection} will
be output. Ignored for \code{Spatial} objects, as the output is always the
same class as the input.}

\item{drop_null_geometries}{should Features with null geometries be dropped?
Ignored for \code{Spatial*} objects, as it is always \code{TRUE}.}

\item{snap_interval}{Specify snapping distance in source units, must be a
numeric. Default \code{NULL}}

\item{sys}{Should the system mapshaper be used instead of the bundled mapshaper? Gives
better performance on large files. Requires the mapshaper node package to be installed
and on the PATH. Will use the system mapshaper by default if it is available.}
}
\value{
a simplified representation of the geometry in the same class as the
input
}
\description{
A wrapper around \code{rmapshaper::ms_simplify}, which uses
\href{https://github.com/mbloch/mapshaper}{mapshaper} to simplify polygons.
Also uses rmapshaper::check_sys_mapshaper to automatically use the system
mapshaper instead of the bundled mapshaper where possible.
}
\details{
For examples, see \code{\link[rmapshaper]{ms_simplify}}
}
\examples{
# See \code{\link[rmapshaper]{ms_simplify}}

}
